/*
The Event-based Dynamic protocol evaluation
======================================

Authors   : 	Pahlevi, Rizka Reza; Shimada, Hajime
Created on:   August 14th 2023	
Update on : 	August 15th 2023

The proposed of this evaluation is to evaluate the event-based dynamic protocol porposed by Pahlevi et al. 

*/

theory EventBasedDynamic
begin

builtins: diffie-hellman, hashing, asymmetric-encryption, symmetric-encryption

// Registering the seedi
rule Agreed_seed:
    [ Fr(~seed) ]
  -->
    [ !Lts($A, ~seed), !Ltsd($A, ~seed) ]

rule Get_seed:
    [ !Ltsd(A, seedkey) ]
  -->
    [ Out(seedkey) ]

rule Reveal_seed:
    [ !Lts(A, ltk) ]
  --[ LtkReveal(A) ]->
    [ Out(ltk) ]

rule ComputedPr:
  let
    Y = seed^'qprime'
    T = Y^('qroot'*~n)
    PR = T*('qprime'*'prime')
  in
    [ 
    Fr(~n)
    , !Ltsd(A, seed)
    ]
  -->
    [
      !Cpr(~n, PR)
    ]
  
rule ComputedEV:
  let
    E = <PR, ~rc>
  in
    [
      Fr(~rc)
      , !Cpr(n, PR)
    ]
    -->
    [
      !Cev(senc(E, ~rc), ~rc) 
    ]

rule Contact_1:
    [
     !Cpr(n, PR)
      , !Cev(ev1, rc) 
    ]
    --[SessionSeed1($A, PR)]->
    [
      !Contact1($A, n, rc, PR)
      , Out(ev1)
    ]

rule Contact_3:
  [
    In(ev2)
    , !Contact2(A, n1, rc1, PR1)
  ]
  --[SessionSeed3(A, sdec(ev2, rc1))]->
  [

  ]

rule Contact_2:
    [
      In(ev1)
      , !Contact1(A, n, rc, PR)
      , !Cpr( n1, PR1)
      , !Cev(ev2, rc1) 
      , !Lts($S, ~seed)
    ]
    --[SessionSeed2($S, sdec(ev1, rc)), SesSeed($S, ev1)]->
    [
      !Contact2(A, n1, rc1, PR1)
      , Out(ev2)
    ]

lemma Client_auth:
  " 
   ( All S k #i. SesSeed(S, k) @ #i
       ==>
       ( 
          Ex. SessionSeed3(S, k) @ #i
       )
    )
  "

lemma Client_session_key_secrecy1:
  "
    not (
      Ex S k k1 k2 #i #j #u #r.
        SessionSeed1(S, k) @ #i
        & SessionSeed2(S, k1) @ #j
        & SessionSeed3(S, k2) @ #u
        & K(k) @ #r
        & K(k1) @ #r
        & K(k2) @ #r
    )
  "

end